@page
@inject IConfiguration Config
<link rel="stylesheet" href="/css/AddPoint.css" />

<div class="admin-container">
    <h2>Додавання нової точки</h2>

    <div id="map" class="map-container"></div>

    <div class="form-container">
        <label for="addr">Адреса / назва</label>
        <input id="addr" type="text" placeholder="Введіть адресу або назву" />

        <label for="descr">Опис</label>
        <textarea id="descr" placeholder="Введіть опис"></textarea>

        <label for="lat">Latitude</label>
        <input id="lat" type="text" readonly />

        <label for="lng">Longitude</label>
        <input id="lng" type="text" readonly />

        <div class="inclusivity-container">
            <label>Інклюзивності</label>
            <button type="button" onclick="toggleInclusives()" class="btn">Оберіть інклюзивності</button>

            <div id="inclusiveList" style="display: none; margin-top:0px;">
                @foreach (var inclusive in new List<string>{
                "Пандус", "Ліфт", "Тактильна плитка", "Звукові сигнали",
                "Дублювання тексту шрифтом Брайля", "Вказівники для слабозорих", "Інклюзивна вбиральня",
                "Паркування для інвалідів", "Занижений бордюр", "Доступна каса",
                "Доступний вхід без сходів", "Спеціальні меблі", "Дублювання інформації жестовою мовою",
                "Розмітка на підлозі", "Антиковзаюче покриття", "Звукові оголошення",
                "Доступність громадського транспорту", "Широкі проходи для колясок", "Пандус в транспорті", "Показ з субтитрами"
                })
                {
                    <label class="inclusive-item">
                        <input type="checkbox" value="@inclusive" class="inclusive-checkbox" />
                        <span>@inclusive</span>
                    </label>
                }
            </div>
        </div>

        <label for="photos">Фото (необов'язково, можна декілька)</label>
        <input type="file" id="photos" multiple accept="image/*">

        <button id="savePoint" class="btn">Зберегти</button>
        <p id="msg" class="status-message"></p>
    </div>
</div>

@section Scripts {
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=@Config["GoogleMaps:ApiKey"]&callback=initMap"></script>

    <script>
        let map, marker, latLng;
        let userRole = '';
        const token = localStorage.getItem('token');
        if (!token) location.href = '/Auth/Login';

        async function getRole() {
            const res = await fetch('/api/user/me', { headers: { Authorization: 'Bearer ' + token } });
            const user = await res.json();
            userRole = user.role;
        }

        async function initMap() {
            await getRole();

            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 49.8397, lng: 24.0297 },
                zoom: 12
            });

            map.addListener('click', (e) => {
                latLng = e.latLng;
                if (marker) marker.setMap(null);
                marker = new google.maps.Marker({ position: latLng, map });
                document.getElementById('lat').value = latLng.lat();
                document.getElementById('lng').value = latLng.lng();
            });
        }

        function toggleInclusives() {
            const list = document.getElementById('inclusiveList');
            list.style.display = list.style.display === 'none' ? 'block' : 'none';
        }

        document.getElementById('savePoint').onclick = async () => {
            if (!latLng) return alert('Виберіть точку на мапі');

            const address = document.getElementById('addr').value.trim();
            const description = document.getElementById('descr').value.trim();

            if (!address) return alert('Введіть адресу / назву точки');
            if (!description) return alert('Введіть опис точки');

            const categories = Array.from(document.querySelectorAll('.inclusive-checkbox:checked')).map(x => x.value);

            const body = {
                Latitude: latLng.lat(),
                Longitude: latLng.lng(),
                Address: address,
                Description: description,
                Categories: categories,
                LOI: 0
            };

            const apiUrl = userRole === 'admin' ? '/api/point' : '/api/pointrequest';

            const res = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token },
                body: JSON.stringify(body)
            });

            if (res.ok) {
                const point = await res.json();

                const files = document.getElementById('photos').files;
                if (files.length > 0) {
                    const formData = new FormData();
                    for (const f of files) formData.append('photos', f);

                    const uploadRes = await fetch(`/api/point/${point.id}/photos`, {
                        method: 'POST',
                        headers: { Authorization: 'Bearer ' + token },
                        body: formData
                    });

                    if (!uploadRes.ok) {
                        document.getElementById('msg').innerText = 'Точку додано, але фото не збережено';
                        return;
                    }
                }

                document.getElementById('msg').innerText = 'Точку додано!';
            } else {
                const errorText = await res.text();
                document.getElementById('msg').innerText = `Помилка ${res.status}: ${errorText}`;
            }
        };
    </script>
}
