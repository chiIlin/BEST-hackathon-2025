@page
@inject IConfiguration Config
<link rel="stylesheet" href="/css/Requests.css" />

<div class="top-panel" style="margin-bottom: 40px; display: flex; align-items: center; justify-content: space-between; width: 100%;">
    <a href="/" class="logo-link-hover" style="display: flex; align-items: center; text-decoration: none; color: white; transition: color 0.2s;">
        <div class="logo-grid-hover">
            <div></div><div></div><div></div>
            <div></div><div></div><div></div>
            <div></div><div></div><div></div>
        </div>
        <span style="font-size: 20px; font-weight: bold; letter-spacing: 1px; margin-left: 10px;">CHILLGO</span>
    </a>

    <a href="/Auth/Profile" class="profile-btn-fixed">
        <i class="bi bi-person-circle"></i> Профіль
    </a>
</div>

<style>
    .profile-btn-fixed {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background: #4CAF50;
        color: white;
        padding: 8px 14px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 500;
        font-size: 16px;
        transition: background-color 0.3s, transform 0.2s;
    }

        .profile-btn-fixed:hover {
            background: #3e8e41;
            transform: scale(1.05);
        }

        .profile-btn-fixed i {
            font-size: 20px;
        }

    .logo-grid-hover {
        display: grid;
        grid-template-columns: repeat(3, 10px);
        grid-gap: 8px;
        margin-right: 8px;
        transition: grid-gap 0.4s, margin-right 0.4s;
    }

        .logo-grid-hover div {
            width: 10px;
            height: 10px;
            background-color: #14D378;
            transition: width 0.3s, height 0.3s;
        }

    .logo-link-hover:hover .logo-grid-hover div {
        width: 6px;
        height: 6px;
    }

    .logo-link-hover:hover .logo-grid-hover {
        grid-gap: 4px;
        margin-right: 4px;
    }
</style>

<div class="admin-container">

    <h2>Заявки на додавання точок</h2>

    <div id="map" class="map-container"></div>

    <table class="requests-table">
        <thead>
            <tr>
                <th>Адреса</th>
                <th>Опис</th>
                <th>Інклюзивність</th>
                <th>Дії</th>
            </tr>
        </thead>
        <tbody id="requestsTable">
        </tbody>
    </table>

    <h2>Заявки на зміну доступності (LOI)</h2>

    <table class="requests-table">
        <thead>
            <tr>
                <th>PointId</th>
                <th>Запропонований LOI</th>
                <th>Дії</th>
            </tr>
        </thead>
        <tbody id="loiRequestsTable">
        </tbody>
    </table>
</div>

@section Scripts {
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=@Config["GoogleMaps:ApiKey"]&callback=initMap"></script>

    <script>
        const token = localStorage.getItem('token');
        if (!token) location.href = '/Auth/Login';

        let map, marker;

        async function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 49.8397, lng: 24.0297 },
                zoom: 12
            });

            const userRes = await fetch('/api/user/me', { headers: { Authorization: 'Bearer ' + token } });
            if (!userRes.ok) location.href = '/';

            const user = await userRes.json();
            if (user.role !== 'admin') location.href = '/';

            loadRequests();
            loadLoiRequests();
        }

        async function loadRequests() {
            const res = await fetch('/api/pointrequest', { headers: { Authorization: 'Bearer ' + token } });
            const requests = await res.json();
            const table = document.getElementById('requestsTable');
            table.innerHTML = '';

            requests.forEach(r => {
                const row = document.createElement('tr');
                row.innerHTML = `
                <td>${r.pointId}</td>
                <td>${r.requestedLoi}</td>
                <td>
                    <button onclick="approveLoi('${r.id}')" class="btn">Схвалити</button>
                    <button onclick="rejectLoi('${r.id}')" class="btn btn-secondary">Відхилити</button>
                </td>
            `;
                table.appendChild(row);
            });

        }

        async function loadLoiRequests() {
            const res = await fetch('/api/loirequest', { headers: { Authorization: 'Bearer ' + token } });
            const requests = await res.json();
            const table = document.getElementById('loiRequestsTable');
            table.innerHTML = '';

            requests.forEach(r => {
                const row = document.createElement('tr');
                row.innerHTML = `
                        <td>${r.pointId}</td>
                        <td>${r.requestedLoi}</td>
                        <td>
                            <button onclick="approveLoi('${r.id}')" class="btn">Схвалити</button>
                            <button onclick="rejectLoi('${r.id}')" class="btn btn-secondary">Відхилити</button>
                        </td>
                    `;
                table.appendChild(row);
            });
        }

        async function approve(id) {
            const res = await fetch(`/api/pointrequest/${id}/approve`, {
                method: 'POST',
                headers: { Authorization: 'Bearer ' + token }
            });
            if (res.ok) {
                alert('Заявку схвалено');
                loadRequests();
            } else alert('Помилка схвалення');
        }

        async function reject(id) {
            const res = await fetch(`/api/pointrequest/${id}`, {
                method: 'DELETE',
                headers: { Authorization: 'Bearer ' + token }
            });
            if (res.ok) {
                alert('Заявку відхилено');
                loadRequests();
            } else alert('Помилка відхилення');
        }

        async function approveLoi(id) {
            const res = await fetch(`/api/loirequest/${id}/approve`, {
                method: 'POST',
                headers: { Authorization: 'Bearer ' + token }
            });
            if (res.ok) {
                alert('LOI оновлено');
                loadLoiRequests();
            } else alert('Помилка схвалення LOI');
        }

        async function rejectLoi(id) {
            const res = await fetch(`/api/loirequest/${id}`, {
                method: 'DELETE',
                headers: { Authorization: 'Bearer ' + token }
            });
            if (res.ok) {
                alert('Заявку відхилено');
                loadLoiRequests();
            } else alert('Помилка відхилення');
        }

        function showOnMap(lat, lng) {
            const pos = { lat, lng };
            if (marker) marker.setMap(null);
            marker = new google.maps.Marker({ position: pos, map });
            map.setCenter(pos);
            map.setZoom(15);
        }
    </script>
}
