@page
@inject IConfiguration Config
<link rel="stylesheet" href="/css/Requests.css" />

<div class="admin-container">
    <h2>Заявки на додавання точок</h2>

    <div id="map" class="map-container"></div>

    <table class="requests-table">
        <thead>
            <tr>
                <th>Адреса</th>
                <th>Опис</th>
                <th>Інклюзивність</th>
                <th>Дії</th>
            </tr>
        </thead>
        <tbody id="requestsTable">
            <!-- Дані будуть завантажені через JavaScript -->
        </tbody>
    </table>
</div>

@section Scripts {
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=@Config["GoogleMaps:ApiKey"]&callback=initMap"></script>

    <script>
        const token = localStorage.getItem('token');
        if (!token) location.href = '/Auth/Login';

        let map, marker;

        async function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 49.8397, lng: 24.0297 },
                zoom: 12
            });

            const userRes = await fetch('/api/user/me', { headers: { Authorization: 'Bearer ' + token } });
            if (!userRes.ok) location.href = '/';

            const user = await userRes.json();
            if (user.role !== 'admin') location.href = '/'; // доступ тільки для адміна

            loadRequests();
        }

        async function loadRequests() {
            const res = await fetch('/api/pointrequest', {
                headers: { 'Authorization': 'Bearer ' + token }
            });

            if (!res.ok) {
                alert('Помилка завантаження заявок');
                return;
            }

            const requests = await res.json();
            const table = document.getElementById('requestsTable');
            table.innerHTML = '';

            requests.forEach(r => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${r.proposed.address}</td>
                    <td>${r.proposed.description}</td>
                    <td>${r.proposed.loi}</td>
                    <td>
                        <button onclick="approve('${r.id}')" class="btn">Схвалити</button>
                        <button onclick="reject('${r.id}')" class="btn btn-secondary">Відхилити</button>
                        <button onclick="showOnMap(${r.proposed.latitude}, ${r.proposed.longitude})" class="btn btn-map">Показати на карті</button>
                    </td>
                `;
                table.appendChild(row);
            });
        }

        async function approve(id) {
            const res = await fetch(`/api/pointrequest/${id}/approve`, {
                method: 'POST',
                headers: { 'Authorization': 'Bearer ' + token }
            });

            if (res.ok) {
                alert('Заявку схвалено');
                loadRequests();
            } else {
                alert('Помилка схвалення заявки');
            }
        }

        async function reject(id) {
            // Перевіряємо, чи id є валідним
            if (!id || id.trim() === '') {
                alert('Помилка: Невалідний ідентифікатор заявки');
                return;
            }

            try {
                const res = await fetch(`/api/pointrequest/${id}`, {
                    method: 'DELETE',
                    headers: { 'Authorization': 'Bearer ' + token }
                });

                if (res.ok) {
                    alert('Заявку відхилено');
                    loadRequests(); // Оновлюємо список заявок
                } else if (res.status === 404) {
                    alert('Помилка: Заявку не знайдено. Перевірте, чи заявка існує.');
                } else {
                    alert(`Помилка відхилення заявки: ${res.status}`);
                }
            } catch (error) {
                alert('Сталася помилка під час відхилення заявки. Спробуйте ще раз.');
                console.error('Помилка:', error);
            }
        }

        function showOnMap(lat, lng) {
            const pos = { lat, lng };
            if (marker) marker.setMap(null);
            marker = new google.maps.Marker({ position: pos, map });
            map.setCenter(pos);
            map.setZoom(15);
        }
    </script>
}
